/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import config.Koneksi;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class BarangView extends javax.swing.JFrame {
    
    private Koneksi k;
    private DefaultTableModel tblModel;
    private boolean isKodeBarangExist = false;

    /**
     * Creates new form BarangView
     */
    public BarangView() {
        initComponents();
        k = new Koneksi();
        updateTabelBarang();
    }

    public DefaultTableModel defaultTableModel() {
        return new DefaultTableModel(new Object[][]{},
            new String[]{"KODE BARANG", "JUDUL BARANG", "STOK BARANG"}) {
            // Pastikan jumlah elemen sama dengan jumlah kolom
            boolean[] canEdit = new boolean[]{
                false, false, false // Sesuai dengan jumlah kolom
            };

            @Override
            public boolean isCellEditable(int row, int column) {
                // Pastikan tidak ada akses di luar batas array
                return canEdit[column];
            }
        };
    }
    
    public void updateTabelBarang() {
        try {
            String data[] = new String[3];
            tblModel = defaultTableModel();
            tabelBarang.setModel(tblModel);
            
            String sqlSelect = "SELECT * FROM barang";
            Statement stmt = k.createStatement();
            ResultSet result = stmt.executeQuery(sqlSelect);
            while (result.next()) {
                data[0] = result.getString("kode_barang");
                data[1] = result.getString("judul_barang");
                data[2] = result.getString("stok_barang");
                tblModel.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(BarangView.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
    public void tampilDataBarang(){
        int row = tabelBarang.getSelectedRow();
        textKodeBarang.setText(tblModel.getValueAt(row, 0).toString());
        textJudulBarang.setText(tblModel.getValueAt(row, 1).toString());
        textStokBarang.setText(tblModel.getValueAt(row, 2).toString());
        
        textKodeBarang.setEnabled(false);
        tombolSimpan.setEnabled(true);
        tombolDelete.setEnabled(true);
    }
    
    public void clearFormInputBarang(){
        textKodeBarang.setText(null);
        textJudulBarang.setText(null);
        textStokBarang.setText(null);
        
        textKodeBarang.setEnabled(true);
        tombolSimpan.setEnabled(true);
        tombolDelete.setEnabled(false);
        
        tabelBarang.clearSelection();
    }
    
    public void validasiKodeBarang(String kodeBarang){
        try {
            Statement stmt = k.createStatement();
            String sqlSelect = "SELECT * FROM barang WHERE kode_barang = '"+kodeBarang+"'";
            ResultSet result = stmt.executeQuery(sqlSelect);
            if(result.next()){
                int confirm = JOptionPane.showConfirmDialog(this,
                        "Kode Barang sudah ada!\nApakah anda ingin mengedit data yang sudah ada?",
                        "Konfirmasi",JOptionPane.YES_NO_OPTION);
                if(confirm == 0){
                    textKodeBarang.setText(result.getString("kode_barang"));
                    textJudulBarang.setText(result.getString("judul_barang"));
                    textStokBarang.setText(result.getString("stok_barang"));
                    tombolDelete.setEnabled(true);
                } else {
                    clearFormInputBarang();
                }
//                return true; // Kode barang sudah ada, return true
            }
        } catch (SQLException ex) {            
            Logger.getLogger(BarangView.class.getName()).log(Level.SEVERE, null, ex);
        }
//        return false; // Kode barang tidak ada, return false
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textKodeBarang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textJudulBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textStokBarang = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tombolSimpan = new javax.swing.JButton();
        tombolReset = new javax.swing.JButton();
        tombolDelete = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("DATA BARANG");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel2.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        jLabel2.setText("KODE BARANG");
        jPanel2.add(jLabel2);

        textKodeBarang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textKodeBarangFocusLost(evt);
            }
        });
        jPanel2.add(textKodeBarang);

        jLabel3.setText("JUDUL BARANG");
        jPanel2.add(jLabel3);
        jPanel2.add(textJudulBarang);

        jLabel4.setText("STOK BARANG");
        jPanel2.add(jLabel4);

        textStokBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textStokBarangKeyTyped(evt);
            }
        });
        jPanel2.add(textStokBarang);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        tombolSimpan.setText("SIMPAN");
        tombolSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanActionPerformed(evt);
            }
        });
        jPanel4.add(tombolSimpan);

        tombolReset.setText("BARU");
        tombolReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolResetActionPerformed(evt);
            }
        });
        jPanel4.add(tombolReset);

        tombolDelete.setText("DELETE");
        tombolDelete.setEnabled(false);
        tombolDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(tombolDelete);

        jPanel3.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        tabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBarang);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSimpanActionPerformed
        try {
            // Ambil data dari text fields
            String kodeBarang = textKodeBarang.getText();
            String judulBarang = textJudulBarang.getText();
            String stokBarang = textStokBarang.getText();

            // Validasi jika field kosong
            if (kodeBarang.isEmpty() || judulBarang.isEmpty() || stokBarang.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi!");
                return;
            }

            // Query INSERT menggunakan PreparedStatement
            String sqlInsert = "INSERT INTO barang (kode_barang, judul_barang, stok_barang) VALUES (?, ?, ?)";

            PreparedStatement pstmt = k.konek.prepareStatement(sqlInsert);
            pstmt.setString(1, kodeBarang);
            pstmt.setString(2, judulBarang);
            pstmt.setString(3, stokBarang);

            int rowsAffected = pstmt.executeUpdate(); // Menjalankan query

            // Mengecek apakah ada baris yang terpengaruh
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                clearFormInputBarang();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data!");
            }
        } catch (SQLException ex) {

            if(ex.getErrorCode() == 1062 /*duplikat entry*/) {
                try {
                    String sqlUpdate = "UPDATE barang SET "
                            + "judul_barang = '"+textJudulBarang.getText()+"', "
                            + "stok_barang = '"+textStokBarang.getText()+"' "
                            + "WHERE kode_barang = '"+textKodeBarang.getText()+"'";
                    Statement stmt = k.createStatement();
                    stmt.executeUpdate(sqlUpdate);
                    JOptionPane.showMessageDialog(this, "Data berhasil di ubah!");
                } catch (SQLException ex1) {
                    // Tangani jika terjadi error
                    Logger.getLogger(BarangView.class.getName()).log(Level.SEVERE, null, ex1);
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data!");
                }
            }
            System.out.println("ERROR: "+ex.getMessage());
        }
        clearFormInputBarang();
        updateTabelBarang();
    }//GEN-LAST:event_tombolSimpanActionPerformed

    private void tombolDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolDeleteActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah anda yakin menghapus data ini?",
                "Peringatan",JOptionPane.YES_NO_OPTION);
        if (confirm == 0){
            try {
                String sqlDelete = "DELETE FROM barang WHERE kode_barang = '"+textKodeBarang.getText()+"'";
                Statement stmt = k.createStatement();
                stmt.executeUpdate(sqlDelete);
                JOptionPane.showMessageDialog(this, "Data berhasil di hapus!");
            } catch (SQLException ex) {
                Logger.getLogger(BarangView.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateTabelBarang();
        } 
        clearFormInputBarang();
    }//GEN-LAST:event_tombolDeleteActionPerformed

    private void tombolResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolResetActionPerformed
        // TODO add your handling code here:
       clearFormInputBarang();
    }//GEN-LAST:event_tombolResetActionPerformed

    private void textKodeBarangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textKodeBarangFocusLost
        // TODO add your handling code here:
        validasiKodeBarang(textKodeBarang.getText());
//        isKodeBarangExist = validasiKodeBarang(textKodeBarang.getText());
    }//GEN-LAST:event_textKodeBarangFocusLost

    private void tabelBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBarangMouseClicked
        // TODO add your handling code here:
        tampilDataBarang();
    }//GEN-LAST:event_tabelBarangMouseClicked

    private void textStokBarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textStokBarangKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE)
        {
            evt.consume(); // batalkan input selain angka
        }
    }//GEN-LAST:event_textStokBarangKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarangView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarangView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelBarang;
    private javax.swing.JTextField textJudulBarang;
    private javax.swing.JTextField textKodeBarang;
    private javax.swing.JTextField textStokBarang;
    private javax.swing.JButton tombolDelete;
    private javax.swing.JButton tombolReset;
    private javax.swing.JButton tombolSimpan;
    // End of variables declaration//GEN-END:variables
}
