/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Microsoft
 */
public class ListrikView extends javax.swing.JFrame {

    private Listrik listrik;

    /**
     * Creates new form ListrikView
     */
    public ListrikView() {
        initComponents();

        listrik = new Listrik();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelIdPelanggan = new javax.swing.JLabel();
        textIdPelanggan = new javax.swing.JTextField();
        labelNama = new javax.swing.JLabel();
        textNama = new javax.swing.JTextField();
        labelDaya = new javax.swing.JLabel();
        comboDaya = new javax.swing.JComboBox<>();
        labelNominal = new javax.swing.JLabel();
        textNominal = new javax.swing.JTextField();
        labelKwh = new javax.swing.JLabel();
        textKwh = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        tombolSubmit = new javax.swing.JButton();
        tombolReset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        labelStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel1.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        labelIdPelanggan.setText("ID Pelanggan");
        jPanel1.add(labelIdPelanggan);

        textIdPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdPelangganActionPerformed(evt);
            }
        });
        textIdPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textIdPelangganKeyTyped(evt);
            }
        });
        jPanel1.add(textIdPelanggan);

        labelNama.setText("Nama");
        jPanel1.add(labelNama);

        textNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNamaActionPerformed(evt);
            }
        });
        textNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNamaKeyTyped(evt);
            }
        });
        jPanel1.add(textNama);

        labelDaya.setText("Daya");
        jPanel1.add(labelDaya);

        comboDaya.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "== Pilih ==", "R1/450 VA", "R1/900 VA", "R1/1.300 VA", "R1/2.200 VA" }));
        jPanel1.add(comboDaya);

        labelNominal.setText("Nominal");
        jPanel1.add(labelNominal);

        textNominal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNominalActionPerformed(evt);
            }
        });
        textNominal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNominalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNominalKeyTyped(evt);
            }
        });
        jPanel1.add(textNominal);

        labelKwh.setText("Jumlah Kwh");
        jPanel1.add(labelKwh);

        textKwh.setEditable(false);
        jPanel1.add(textKwh);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        tombolSubmit.setText("Submit");
        tombolSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tombolSubmitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tombolSubmitMouseExited(evt);
            }
        });
        tombolSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSubmitActionPerformed(evt);
            }
        });
        jPanel3.add(tombolSubmit);

        tombolReset.setText("Reset");
        tombolReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tombolResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tombolResetMouseExited(evt);
            }
        });
        tombolReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolResetActionPerformed(evt);
            }
        });
        jPanel3.add(tombolReset);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jPanel4.add(labelStatus);

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textIdPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIdPelangganActionPerformed

    private void textNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNamaActionPerformed

    private void textNominalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNominalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNominalActionPerformed

    private void tombolSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSubmitActionPerformed
        // Ambil input dari field
        String nama = textNama.getText().trim();
        String idPelanggan = textIdPelanggan.getText().trim();

        // Validasi Nama dan ID Pelanggan tidak boleh kosong
        if (idPelanggan.isEmpty()) {
            JOptionPane.showMessageDialog(null, "ID Pelanggan harus diisi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;  // Hentikan eksekusi jika ID Pelanggan kosong
        }

        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama harus diisi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;  // Hentikan eksekusi jika nama kosong
        }
        
        // Set Nama dan ID Pelanggan ke objek listrik
        listrik.setNama(nama.toUpperCase());
        listrik.setIdPelanggan(idPelanggan);

        // Cek apakah daya sudah dipilih
        if(comboDaya.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Silakan pilih opsi lain.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            comboDaya.setSelectedIndex(0);
            return;  // Hentikan eksekusi jika ada kesalahan
        } else {
            listrik.setDaya(comboDaya.getSelectedItem().toString());
        }

        String nominalLength = textNominal.getText();

        // Cek apakah nominal cukup panjang (minimal 10000)
        if (nominalLength.length() <= 4) {
            JOptionPane.showMessageDialog(null, "Minimal nominal adalah 10000", "Peringatan", JOptionPane.WARNING_MESSAGE);
            textNominal.setText("");
            textKwh.setText("");
            return;  // Hentikan eksekusi jika ada kesalahan
        } else {
            listrik.setNominal(Double.parseDouble(textNominal.getText()));
        }
        
        // Cek apakah input nominal diakhiri dengan '000'
        if (!nominalLength.endsWith("000") && nominalLength.length() > 0) {
            JOptionPane.showMessageDialog(null, "Nominal harus diakhiri dengan '000'.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            textNominal.setText("");
            textKwh.setText("");
            return;  // Hentikan eksekusi jika ada kesalahan
        } 

        // Format struk pembelian
        String formattedDateTime = listrik.getDateTime();
        String info = String.format("** SAROJA CELL **\n" +
                "SAROJA CELL\n" +
                "SERVIS HP PEKALONGAN\n" +
                "081225789338 / 082314431212\n" +
                "\n" +
                "%s\n" + // formattedDateTime
                "------------------------------------\n" +
                "STRUK PEMBELIAN LISTRIK \n"
                + "%s\n" +
                "------------------------------------\n" +
                "%-17s: %s\n" + // IDPEL
                "%-17s: %s\n" + // NAMA
                "%-14s: %s\n" + // TRF/DAYA
                "%-14s: RP. %s\n" + // NOMINAL
                "%-19s: RP. %s\n" + // PPN
                "%-14s: RP. %s/%s\n" + // ANGS/MAT
                "%-13s: RP. %s\n" + // RP TOKEN
                "%-15s: %.2f KWH\n" + // JML KWH
                "%-15s: RP. %s\n" + // BIAYA ADM
                "%-12s: RP. %s\n" + // TOTAL BAYAR
                "------------------------------------\n" +
                "\n" +
                "%s\n" + // Centered TOKEN
                "%s\n" + // Random code
                "\n" +
                "INFO HUBUNGI CALL CENTER 123\n" +
                "ATAU HUBUNGI PLN TERDEKAT", 
                formattedDateTime,
                String.format("%" + ((40 - "PRABAYAR".length()) / 2 + "PRABAYAR".length()) + "s", "PRABAYAR"), // Centered
                "IDPEL", listrik.getIdPelanggan(),
                "NAMA", listrik.getNama(),
                "TRF/DAYA", listrik.getDaya(),
                "NOMINAL", listrik.getNominal(),
                "PPN", listrik.getPpn(),
                "ANGS/MAT", listrik.getAngs(), listrik.getAngs(),
                "RP TOKEN", listrik.getNominal(),
                "JML KWH", listrik.getJumlahKwh(),
                "BIAYA ADM", listrik.getAdmin(),
                "TOTAL BAYAR", listrik.getTotal(),
                String.format("%" + ((40 - "TOKEN".length()) / 2 + "TOKEN".length()) + "s", "TOKEN"), // Centered
                listrik.generateRandomCode()
        );
    
        // Tampilkan nota
        JOptionPane.showMessageDialog(null, info, "Nota", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tombolSubmitActionPerformed

    private void tombolResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolResetActionPerformed
        // TODO add your handling code here:
        textIdPelanggan.setText("");
        textNama.setText("");
        textKwh.setText("");
        textNominal.setText("");
        comboDaya.setSelectedIndex(0);
    }//GEN-LAST:event_tombolResetActionPerformed

    private void textNominalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNominalKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        String currentText = textNominal.getText(); // Ambil teks saat ini dari field input

        // Cek apakah karakter yang dimasukkan adalah digit atau tombol backspace
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
            labelStatus.setText("Status: Input hanya boleh berupa angka.");

        }

        // Jika karakter yang dimasukkan adalah digit
        if (Character.isDigit(c)) {
            // Hitung digit yang sudah ada (tanpa '000')
            int validLength = currentText.length();
//            System.out.println(validLength);
            
            if (validLength > 11) {
                evt.consume();
            }
        }

    }//GEN-LAST:event_textNominalKeyTyped

    private void textNominalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNominalKeyReleased
        // TODO add your handling code here:
        String nominalText = textNominal.getText();
        // Check if the text is not empty
        if (!nominalText.isEmpty()) {
            try {
                listrik.setNominal(Double.parseDouble(nominalText));
                textKwh.setText(String.valueOf(listrik.getJumlahKwh()));
            } catch (NumberFormatException e) {
                // Handle invalid input, if necessary
                System.out.println("Invalid input: " + nominalText);
                textKwh.setText(""); // Clear the textKwh field on invalid input
            }
        } else {
            // Clear textKwh when input is empty
            textKwh.setText("");
        }  
    }//GEN-LAST:event_textNominalKeyReleased

    private void textIdPelangganKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIdPelangganKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE)
        {
//            batalkan input selain angka
            evt.consume(); 
            labelStatus.setText("Status: Input hanya boleh berupa angka.");
        }
        else
        {
            labelStatus.setText("");

        }
    }//GEN-LAST:event_textIdPelangganKeyTyped

    private void textNamaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNamaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE)
        {
//            batalkan input selain angka
            evt.consume(); 
            labelStatus.setText("Status: Input hanya boleh berupa huruf.");
        }
        else
        {
            labelStatus.setText("");

        }
    }//GEN-LAST:event_textNamaKeyTyped

    private void tombolResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolResetMouseEntered
        // TODO add your handling code here:
        labelStatus.setText("Status: Klik tombol reset untuk mengosongkan form.");

    }//GEN-LAST:event_tombolResetMouseEntered

    private void tombolResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolResetMouseExited
        // TODO add your handling code here:
        labelStatus.setText("");
    }//GEN-LAST:event_tombolResetMouseExited

    private void tombolSubmitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolSubmitMouseEntered
        // TODO add your handling code here:
        labelStatus.setText("Status: Klik tombol submit untuk mengkonfirmasi pesanan.");

    }//GEN-LAST:event_tombolSubmitMouseEntered

    private void tombolSubmitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolSubmitMouseExited
        // TODO add your handling code here:
        labelStatus.setText("");

    }//GEN-LAST:event_tombolSubmitMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListrikView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListrikView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListrikView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListrikView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListrikView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboDaya;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelDaya;
    private javax.swing.JLabel labelIdPelanggan;
    private javax.swing.JLabel labelKwh;
    private javax.swing.JLabel labelNama;
    private javax.swing.JLabel labelNominal;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JTextField textIdPelanggan;
    private javax.swing.JTextField textKwh;
    private javax.swing.JTextField textNama;
    private javax.swing.JTextField textNominal;
    private javax.swing.JButton tombolReset;
    private javax.swing.JButton tombolSubmit;
    // End of variables declaration//GEN-END:variables
}
